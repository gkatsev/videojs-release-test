name: release
on:
  push:
    tags:
    # match semver versions
    - "v[0-9]+.[0-9]+.[0-9]+"
    # match semver pre-releases
    - "v[0-9]+.[0-9]+.[0-9]+-*"
jobs:
  release:
    env:
      NETLIFY_BASE: 'videojs-preview.netlify.app/sandbox/'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        # We neeed to fetch the entire history as conventional-changelog needs
        # access to any number of git commits to build the changelog.
        with:
          fetch-depth: 0

      - name: read node version from .nvmrc
        run: echo ::set-output name=NVMRC::$(cat .nvmrc)
        shell: bash
        id: nvm

      - name: setup node
        uses: actions/setup-node@v2
        with:
          node-version: '${{steps.nvm.outputs.NVMRC}}'
          cache: npm
          registry-url: 'https://registry.npmjs.org'

      - name: npm install
        run: npm i --prefer-offline --no-audit

      # publish runs build for us via a prepublishOnly script
      # - name: npm release
      #   run: npm publish --tag next
      #   env:
      #     NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: get current changelog
        run: node -e "console.log(require('./build/current-changelog.js')())" > CHANGELOG-LATEST.md

      - name: get dashed package version for netlify
        run: echo ::set-output name=VERSION::$(node -e "process.stdout.write(require('./package.json').version.split('.').join('-'))")
        id: get-version
        shell: bash
        if: env.NETLIFY_BASE != ''

      - name: add netlify preview to release notes
        run: |
          echo "" >> CHANGELOG-LATEST.md
          echo "[netlify preview for this version](https://v${{steps.get-version.outputs.VERSION}}--${{env.NETLIFY_BASE}})" >> CHANGELOG-LATEST.md
        if: env.NETLIFY_BASE != ''

      - name: Create Github release
        uses: softprops/action-gh-release@v1
        with:
          body_path: CHANGELOG-LATEST.md
          token: ${{github.token}}
          prerelease: true
          files: dist/*.zip
          discussion_category_name: Releases

  deploy:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: setup node
        uses: actions/setup-node@v2

      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"

      - name: npm install video.js
        env:
          VJS_VERSION: ${{ github.event.tag_name }}
        run: npm install video.js@`echo $VJS_VERSION | cut -d 'v' -f 2`
      - run: cat node_modules/video.js/package.json
